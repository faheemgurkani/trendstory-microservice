"""Script to generate gRPC Python files from proto definitions."""

import os
import subprocess
import sys

def generate_proto():
    """Generate gRPC Python files from proto definitions."""
    # Create proto directory if it doesn't exist
    os.makedirs("proto", exist_ok=True)
    
    # Generate Python files from proto
    proto_file = "proto/trendstory.proto"
    output_dir = "proto"
    
    # Generate gRPC Python files
    subprocess.run([
        sys.executable, "-m", "grpc_tools.protoc",
        f"--proto_path={os.path.dirname(proto_file)}",
        f"--python_out={output_dir}",
        f"--grpc_python_out={output_dir}",
        proto_file
    ], check=True)
    
    # Create __init__.py in proto directory
    with open(os.path.join(output_dir, "__init__.py"), "w") as f:
        f.write("# Generated by generate_proto.py\n")
    
    # Fix imports in generated files
    for filename in ["trendstory_pb2.py", "trendstory_pb2_grpc.py"]:
        filepath = os.path.join(output_dir, filename)
        if os.path.exists(filepath):
            with open(filepath, "r") as f:
                content = f.read()
            
            # Fix the import statement
            content = content.replace(
                "import trendstory_pb2 as trendstory__pb2",
                "from proto import trendstory_pb2 as trendstory__pb2"
            )
            
            with open(filepath, "w") as f:
                f.write(content)

if __name__ == "__main__":
    generate_proto() 